<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($rootScope,$scope) {
	/* widget controller */
	var c = this;

	c.selectItem = function(idx) {
		var id = c.data.notes[idx].sys_id;
		
		$rootScope.noteID = id; //Bad Practice, don't set variables on rootScope!
		//$emit(name, args);
		//https://docs.angularjs.org/api/ng/type/$rootScope.Scope#$emit
		$rootScope.$emit('selectNote', {id:id});
	}

	$rootScope.$on('updateList', function(event, myArgs){

		c.data.notes.forEach(function(noteObj){

			//Find the specific list record to update
			if(noteObj.sys_id == myArgs.noteSysID) {

				noteObj.title = myArgs.updatedTitle;
				noteObj.note = myArgs.updatedBody;
			}

		});
	});
}

/*
Angular JS API Reference
https://docs.angularjs.org/api
*/

]]></client_script>
        <controller_as>c</controller_as>
        <css/>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>notes_list</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Notes List</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	/* populate the 'data' object */
	/* e.g., data.table = $sp.getValue('table'); */

	data.notes = [];

	var noteGR = new GlideRecord('x_snc_createnotes_note');
	noteGR.addQuery('user', gs.getUser().getID()); //Get logged in user sys id
	noteGR.orderByDesc('sys_created_on');
	noteGR.query();

	while(noteGR.next()) {
		var noteObj = {};
		
		//use service portal helper method to get some display values
		$sp.getRecordDisplayValues(noteObj, noteGR, 'number,title,sys_id');
		
		//get the first 20 characters of the description
		noteObj.note = noteGR.getValue('note').slice(0,20);
		
		//push the populated obj into the array
		data.notes.push(noteObj);
	}
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>cfurniss</sys_created_by>
        <sys_created_on>2019-07-08 04:02:40</sys_created_on>
        <sys_id>49f7b00ddba23300764f880948961999</sys_id>
        <sys_mod_count>33</sys_mod_count>
        <sys_name>Notes List</sys_name>
        <sys_package display_value="CreateNotes" source="x_snc_createnotes">df5fd9a5090232007f44e1046c8ff69f</sys_package>
        <sys_policy/>
        <sys_scope display_value="CreateNotes">df5fd9a5090232007f44e1046c8ff69f</sys_scope>
        <sys_update_name>sp_widget_49f7b00ddba23300764f880948961999</sys_update_name>
        <sys_updated_by>cfurniss</sys_updated_by>
        <sys_updated_on>2019-07-09 04:25:21</sys_updated_on>
        <template><![CDATA[<div class="panel panel-default">
  <div class="panel-heading clearfix">
    <h3 class="panel-title pull-left">
      <!-- Internationalisation: Notes is the Default value if key "Notes" can't be found in System UI > Messages -->
      ${Notes}
    </h3>
  </div>
  <div class="list-group">
    <a class="list-group-item" ng-repeat="note in data.notes" ng-click="c.selectItem($index)">
      <h4 class="list-group-item-heading">
        {{note.title}}
      </h4>
      <p class="list-group-item-text">
        {{note.note}}
      </p>
    </a>
  </div>
</div>]]></template>
    </sp_widget>
</record_update>
